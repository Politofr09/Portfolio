<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>GameDev on Portfolio</title>
        <link>http://localhost:1313/categories/gamedev/</link>
        <description>Recent content in GameDev on Portfolio</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <copyright>Paul Tom√°s</copyright>
        <lastBuildDate>Mon, 11 Mar 2024 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/categories/gamedev/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Game Engine</title>
        <link>http://localhost:1313/projects/game-engine/</link>
        <pubDate>Mon, 11 Mar 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/projects/game-engine/</guid>
        <description>&lt;img src="http://localhost:1313/projects/game-engine/Screenshot-1.png" alt="Featured image of post Game Engine" /&gt;&lt;h2 id=&#34;description--why&#34;&gt;Description &amp;amp; Why?
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;The engine is designed support both 2D and 3D rendering through OpenGL, with a responsive and modern looking editor interface. It&amp;rsquo;s cross platform, running on both Windows and Linux. I try to rely as less as possible on platform-specific code. Currently, the engine supports serialization, basic rendering and asset management.&lt;/li&gt;
&lt;li&gt;The main purpose of this engine is to teach myself about game engine architecture and take a look at how they work under the hood.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;screenshots&#34;&gt;Screenshots
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/projects/game-engine/Screenshot-3.png&#34;
	width=&#34;1920&#34;
	height=&#34;1009&#34;
	srcset=&#34;http://localhost:1313/projects/game-engine/Screenshot-3_hu16658046050754438996.png 480w, http://localhost:1313/projects/game-engine/Screenshot-3_hu3118190299222362787.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;190&#34;
		data-flex-basis=&#34;456px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;main-features&#34;&gt;Main features
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;- Works on windows and linux&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;- Editor:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A responsive UI made with dear ImGui&lt;/li&gt;
&lt;li&gt;Like with any modern application, you can dock and arrange windows to your liking&lt;/li&gt;
&lt;li&gt;The scene hierarchy panel integrates seamlessly with the ECS&lt;/li&gt;
&lt;li&gt;Drag and drop features&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;- Graphics:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OpenGL based rendering&lt;/li&gt;
&lt;li&gt;2D and 3D renderer&lt;/li&gt;
&lt;li&gt;Material system&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;- ECS:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Custom ECS (Entity Component System) framework&lt;/li&gt;
&lt;li&gt;Cache friendly implementation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;- Serialization:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The entire state of the application is written to disk in yaml format&lt;/li&gt;
&lt;li&gt;Projects, Scenes and Asset metadata can be loaded again to store the progress&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;technical-details&#34;&gt;Technical details
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;- Build system:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/premake/premake-core&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Premake5&lt;/a&gt; is used to generate project files on windows and linux&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;- Libraries used:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/g-truc/glm&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;glm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/Politofr09/glfw&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;assimp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/ocornut/imgui&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;imgui&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/Politofr09/glfw&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;glfw&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/nigels-com/glew&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;glew&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/jbeder/yaml-cpp&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;yaml-cpp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
